name: WordPress Plugin Unit test

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  phpunit:
    name: WordPress ${{ matrix.wordpress }} * PHP v${{ matrix.php }} * ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-20.04 ]
        php: [ '7.1', '7.2', '7.3', '7.4' ]
        wordpress: [ latest, nightly, '5.5' ]

    env:
      PHP_VERSION: ${{ matrix.php }}
      WP_VERSION: ${{ matrix.wordpress }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP v${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, php-mysql

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install gettext library
        run: sudo apt-get install gettext

      - name: Edit mysql.cnf for PHP 5.6
        # MySQL8.0 default-character-set is utf8mb4.
        run: |
          sudo sed -i -e "s/\[mysql\]/\[mysql\]\ndefault-character-set=utf8/" /etc/mysql/conf.d/mysql.cnf
          sudo sed -i -e "s/\[mysql\]/\[mysql\]\ncharacter_set_server=latin1/" /etc/mysql/conf.d/mysql.cnf
        if: ${{ matrix.php == '5.6' }}

      - name: Change authentication method for MySQL8.0
        # MySQL8.0 authentication method is caching_sha2_password.
        run: |
          sudo sed -i -e "s/\[mysqld\]/\[mysqld\]\ndefault_authentication_plugin=mysql_native_password/" /etc/mysql/mysql.conf.d/mysqld.cnf
        if: ${{ matrix.php == '5.6' || matrix.php == '7.0' || matrix.php == '7.1' || matrix.php == '7.2' }}

      - name: Start MySQL
        # See https://github.blog/changelog/2020-02-21-github-actions-breaking-change-ubuntu-virtual-environments-will-no-longer-start-the-mysql-service-automatically/
        run: sudo /etc/init.d/mysql start

      - name: Update composer dependencies for lock file
        # Your lock file does not contain a compatible set of packages. Please run composer update.
        run: composer update
        if: ${{ matrix.php == '7.1' }}

      - name: Install composer dependencies
        run: composer install

      - name: Install wp tests
        run: bash bin/install-wp-tests.sh wordpress_test root root localhost $WP_VERSION

      - name: Install Node.js package dependencies
        run: npm install

      - name: Build a plugin
        run: npm run build

      - name: Run PHPUnit - WordPress ${{ matrix.wordpress }}
        run: composer run phpunit
